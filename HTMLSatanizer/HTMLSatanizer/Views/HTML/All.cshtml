@model HTMLSatanizer.ViewModels.HTMLSiteListViewModel
@{

    this.ViewData["Title"] = "All Satanized HTML page " + this.Model.CurrentPage;
}

@foreach (var sites in Model.HTMLs)
{
    <div class="card mt-5">
        <div class="card-header">
            <h5 class="card-title">@(sites.URL)</h5>
            <h6>@(sites.Type)</h6>
        </div>
        <div class="card-body">
            <p class="card-text">@(sites.ShortHTML)</p>
            <a asp-controller="HTML" asp-action="ById" asp-route-id="@(sites.Id)" class="btn btn-primary">Full Information</a>
        </div>
    </div>
}

<nav aria-label="HTMLs" class="mt-3 pt-3" >
    <ul class="pagination justify-content-center">
        @if (this.Model.CurrentPage == 1)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">
                <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-controller="HTML" asp-action="All" asp-route-id="@this.Model.PreviousPage" asp-route-search="@this.Model.Search" aria-label="Prev">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }

        @{
            const int MorePagesToShow = 3;
            var pagesToShow = new List<int>();

            for (var i = 1; i <= MorePagesToShow; i++)
            {
                pagesToShow.Add(i);
            }

            for (var i = this.Model.CurrentPage - MorePagesToShow; i <= this.Model.CurrentPage + MorePagesToShow; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            for (var i = this.Model.PagesCount - MorePagesToShow + 1; i <= this.Model.PagesCount; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            pagesToShow = pagesToShow.Where(x => x <= this.Model.PagesCount).Distinct().OrderBy(x => x).ToList();
        }

        @for (var i = 0; i < pagesToShow.Count; i++)
        {
            var className = string.Empty;
            int pageNumber = pagesToShow[i];
            if (pageNumber == this.Model.CurrentPage)
            {
                className = "active";
            }
            if (i > 0 && pageNumber - 1 != pagesToShow[i - 1])
            {
                <li class="page-item @className"><a class="page-link" asp-controller="HTML" asp-action="All" asp-route-id="@(pagesToShow[i - 1] + 1)" asp-route-search="@this.Model.Search">...</a></li>
            }
            <li class="page-item @className"><a class="page-link" asp-controller="HTML" asp-action="All" asp-route-id="@pageNumber" asp-route-search="@this.Model.Search">@pageNumber</a></li>
        }

        @if (this.Model.CurrentPage == this.Model.PagesCount)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#"><span aria-hidden="true">&raquo;</span></a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-controller="HTML" asp-action="All" asp-route-id="@this.Model.NextPage" asp-route-search="@this.Model.Search" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>